# Generated by Django 5.2 on 2025-06-10 02:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('muscle_group', models.CharField(blank=True, max_length=50, null=True)),
                ('gif_url', models.URLField(default='https://example.com/default.gif')),
                ('default_sets', models.IntegerField(default=3)),
                ('default_reps', models.IntegerField(default=10)),
                ('exercise_type', models.CharField(choices=[('strength', '근력'), ('cardio', '유산소'), ('flexibility', '유연성'), ('core', '코어')], default='strength', max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '운동',
                'verbose_name_plural': '운동 목록',
            },
        ),
        migrations.RemoveField(
            model_name='workoutmusic',
            name='music_preference',
        ),
        migrations.RemoveField(
            model_name='workoutmusic',
            name='workout_record',
        ),
        migrations.RemoveField(
            model_name='workoutrecord',
            name='user',
        ),
        migrations.AlterModelOptions(
            name='fitnessprofile',
            options={'verbose_name': '피트니스 프로필', 'verbose_name_plural': '피트니스 프로필 목록'},
        ),
        migrations.RemoveField(
            model_name='fitnessprofile',
            name='custom_goal',
        ),
        migrations.RemoveField(
            model_name='fitnessprofile',
            name='distance_unit',
        ),
        migrations.RemoveField(
            model_name='fitnessprofile',
            name='experience_level',
        ),
        migrations.RemoveField(
            model_name='fitnessprofile',
            name='referral_source',
        ),
        migrations.RemoveField(
            model_name='fitnessprofile',
            name='weight_unit',
        ),
        migrations.RemoveField(
            model_name='fitnessprofile',
            name='workout_days_per_week',
        ),
        migrations.AddField(
            model_name='fitnessprofile',
            name='experience',
            field=models.CharField(choices=[('beginner', '초급'), ('intermediate', '중급'), ('advanced', '상급')], default='beginner', max_length=20),
        ),
        migrations.AddField(
            model_name='fitnessprofile',
            name='frequency',
            field=models.IntegerField(default=3, help_text='주당 운동 횟수'),
        ),
        migrations.AddField(
            model_name='fitnessprofile',
            name='goal_text',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='fitnessprofile',
            name='gym_access',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='fitnessprofile',
            name='preferred_exercises',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='fitnessprofile',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='fitnessprofile',
            name='birth_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='fitnessprofile',
            name='gender',
            field=models.CharField(choices=[('male', '남성'), ('female', '여성'), ('other', '기타')], default='other', max_length=10),
        ),
        migrations.AlterField(
            model_name='fitnessprofile',
            name='goal',
            field=models.CharField(choices=[('muscle_gain', '근육 증가'), ('weight_loss', '체중 감량'), ('endurance', '지구력 향상'), ('strength', '근력 향상'), ('general_fitness', '전반적 건강')], default='general_fitness', max_length=50),
        ),
        migrations.AlterField(
            model_name='fitnessprofile',
            name='height',
            field=models.FloatField(default=170, help_text='신장 (cm)'),
        ),
        migrations.AlterField(
            model_name='fitnessprofile',
            name='weight',
            field=models.FloatField(default=70, help_text='체중 (kg)'),
        ),
        migrations.CreateModel(
            name='FoodAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('food_name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('image_base64', models.TextField(blank=True, null=True)),
                ('calories', models.IntegerField()),
                ('protein', models.FloatField(help_text='단백질 (g)')),
                ('carbohydrates', models.FloatField(help_text='탄수화물 (g)')),
                ('fat', models.FloatField(help_text='지방 (g)')),
                ('fiber', models.FloatField(blank=True, help_text='식이섬유 (g)', null=True)),
                ('sugar', models.FloatField(blank=True, help_text='당류 (g)', null=True)),
                ('sodium', models.FloatField(blank=True, help_text='나트륨 (mg)', null=True)),
                ('analysis_summary', models.TextField()),
                ('recommendations', models.TextField()),
                ('analyzed_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='food_analyses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '음식 분석',
                'verbose_name_plural': '음식 분석 목록',
                'ordering': ['-analyzed_at'],
            },
        ),
        migrations.CreateModel(
            name='DailyNutrition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_calories', models.IntegerField(default=0)),
                ('total_protein', models.FloatField(default=0)),
                ('total_carbohydrates', models.FloatField(default=0)),
                ('total_fat', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_nutrition', to=settings.AUTH_USER_MODEL)),
                ('food_analyses', models.ManyToManyField(to='api.foodanalysis')),
            ],
            options={
                'verbose_name': '일일 영양 기록',
                'verbose_name_plural': '일일 영양 기록 목록',
                'ordering': ['-date'],
                'unique_together': {('user', 'date')},
            },
        ),
        migrations.CreateModel(
            name='Routine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('level', models.CharField(max_length=10)),
                ('is_ai_generated', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='routines', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '운동 루틴',
                'verbose_name_plural': '운동 루틴 목록',
            },
        ),
        migrations.CreateModel(
            name='RoutineExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0)),
                ('sets', models.IntegerField()),
                ('reps', models.IntegerField()),
                ('recommended_weight', models.FloatField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.exercise')),
                ('routine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.routine')),
            ],
            options={
                'ordering': ['order'],
                'unique_together': {('routine', 'exercise', 'order')},
            },
        ),
        migrations.AddField(
            model_name='routine',
            name='exercises',
            field=models.ManyToManyField(through='api.RoutineExercise', to='api.exercise'),
        ),
        migrations.CreateModel(
            name='WorkoutRoutineLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('duration', models.IntegerField(help_text='운동 시간 (분)')),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('routine', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.routine')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workout_routine_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '운동 루틴 기록',
                'verbose_name_plural': '운동 루틴 기록 목록',
                'ordering': ['-date'],
            },
        ),
        migrations.DeleteModel(
            name='MusicPreference',
        ),
        migrations.DeleteModel(
            name='WorkoutMusic',
        ),
        migrations.DeleteModel(
            name='WorkoutRecord',
        ),
    ]
