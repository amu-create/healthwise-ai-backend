# Generated by Django 5.2.3 on 2025-07-02 05:55

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0002_foodanalysis_dailynutrition'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='userprofile',
            name='daily_steps_goal',
            field=models.IntegerField(default=10000, help_text='일일 목표 걸음 수'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='preferred_exercises',
            field=models.JSONField(default=list, help_text='선호하는 운동 목록'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='preferred_foods',
            field=models.JSONField(default=list, help_text='선호하는 음식 목록'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='weekly_workout_goal',
            field=models.IntegerField(default=3, help_text='주간 운동 목표 횟수'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='workout_days_per_week',
            field=models.IntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(7)]),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='height',
            field=models.FloatField(blank=True, help_text='Height in cm', null=True, validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(300)]),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='weight',
            field=models.FloatField(blank=True, help_text='Weight in kg', null=True, validators=[django.core.validators.MinValueValidator(20), django.core.validators.MaxValueValidator(500)]),
        ),
        migrations.CreateModel(
            name='ChatSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_session_number', models.IntegerField(default=1, help_text='사용자별 세션 번호')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('summary', models.TextField(blank=True, help_text='세션 대화 요약')),
                ('extracted_preferences', models.JSONField(default=dict, help_text='추출된 선호도 정보')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '챗봇 세션',
                'verbose_name_plural': '챗봇 세션들',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender', models.CharField(choices=[('user', '사용자'), ('bot', '챗봇')], max_length=10)),
                ('message', models.TextField()),
                ('context', models.JSONField(blank=True, help_text='대화 컨텍스트', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_messages', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='api.chatsession')),
            ],
            options={
                'verbose_name': '챗봇 메시지',
                'verbose_name_plural': '챗봇 메시지들',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='WorkoutLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('duration', models.IntegerField(help_text='분 단위')),
                ('calories_burned', models.IntegerField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('workout_name', models.CharField(max_length=100)),
                ('workout_type', models.CharField(choices=[('running', '러닝'), ('cycling', '자전거'), ('swimming', '수영'), ('gym', '헬스장'), ('yoga', '요가'), ('pilates', '필라테스'), ('hiking', '등산'), ('sports', '스포츠'), ('home', '홈트레이닝'), ('other', '기타')], default='other', max_length=20)),
                ('sets', models.IntegerField(blank=True, null=True)),
                ('reps', models.IntegerField(blank=True, null=True)),
                ('weight', models.FloatField(blank=True, help_text='kg 단위', null=True)),
                ('start_latitude', models.FloatField(blank=True, null=True)),
                ('start_longitude', models.FloatField(blank=True, null=True)),
                ('end_latitude', models.FloatField(blank=True, null=True)),
                ('end_longitude', models.FloatField(blank=True, null=True)),
                ('route_coordinates', models.JSONField(default=list, help_text='경로 좌표 목록')),
                ('distance', models.FloatField(blank=True, help_text='이동 거리 (km)', null=True)),
                ('avg_heart_rate', models.IntegerField(blank=True, help_text='평균 심박수', null=True)),
                ('max_heart_rate', models.IntegerField(blank=True, help_text='최대 심박수', null=True)),
                ('steps', models.IntegerField(blank=True, help_text='걸음 수', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workout_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '운동 기록',
                'verbose_name_plural': '운동 기록들',
                'ordering': ['-date', '-created_at'],
            },
        ),
    ]
